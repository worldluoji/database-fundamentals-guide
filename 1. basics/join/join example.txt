create table Candidate(
    id int(11) primary key auto_increment,
    Name varchar(20) NOT NULL
)Engine=INNODB;

create table Vote(
    id int(11) primary key auto_increment,
    candidateId int(11)
)Engine=INNODB;

insert into Candidate(Name) values("A");
insert into Candidate(Name) values("B");
insert into Candidate(Name) values("C");
insert into Candidate(Name) values("D");
insert into Candidate(Name) values("E");
insert into Candidate(Name) values("F");

insert into Vote(candidateId) values(1);
insert into Vote(candidateId) values(1);
insert into Vote(candidateId) values(3);
insert into Vote(candidateId) values(3);
insert into Vote(candidateId) values(2);
insert into Vote(candidateId) values(5);
insert into Vote(candidateId) values(6);
insert into Vote(candidateId) values(1);
insert into Vote(candidateId) values(7);

1) left join:
mysql> select c.Name,v.id,v.candidateId from Candidate c left join Vote v on c.id=v.candidateId;
+------+------+-------------+
| Name | id   | candidateId |
+------+------+-------------+
| A    |    1 |           1 |
| A    |    2 |           1 |
| C    |    3 |           3 |
| C    |    4 |           3 |
| B    |    5 |           2 |
| E    |    6 |           5 |
| F    |    7 |           6 |
| A    |    8 |           1 |
| D    | NULL |        NULL |
+------+------+-------------+
9 rows in set (0.00 sec)
left join表示只要左边的表Candidate中有的就会展示，右边的表Vote里没有就显示NULL

2) right join
mysql> select c.Name,v.id,v.candidateId from Candidate c right join Vote v on c.id=v.candidateId;
+------+----+-------------+
| Name | id | candidateId |
+------+----+-------------+
| A    |  1 |           1 |
| A    |  2 |           1 |
| C    |  3 |           3 |
| C    |  4 |           3 |
| B    |  5 |           2 |
| E    |  6 |           5 |
| F    |  7 |           6 |
| A    |  8 |           1 |
| NULL |  9 |           7 |
+------+----+-------------+
9 rows in set (0.00 sec)

right join正好相反，只要右边表有的就会显示，这时因为D没有投票（没有在Vote表中出现），所以就不会展示；
而candidateId为7的在Candidate表中并没有，所以左变表中显示NULL.

3）inner join
mysql> select c.Name,v.id,v.candidateId from Candidate c inner join Vote v on c.id=v.candidateId;
+------+----+-------------+
| Name | id | candidateId |
+------+----+-------------+
| A    |  1 |           1 |
| A    |  2 |           1 |
| C    |  3 |           3 |
| C    |  4 |           3 |
| B    |  5 |           2 |
| E    |  6 |           5 |
| F    |  7 |           6 |
| A    |  8 |           1 |
+------+----+-------------+
8 rows in set (0.01 sec)
显示连接后，两个表中都要有数据的记录，不能为NULL

4）full join
MySql并没有full join 关键字，但是可以通过如下方式实现：
如果不要重复的：
 select c.Name,v.id,v.candidateId from Candidate c left join Vote v on c.id=v.candidateId
 union
select c.Name,v.id,v.candidateId from Candidate c right join Vote v on c.id=v.candidateId
+------+------+-------------+
| Name | id   | candidateId |
+------+------+-------------+
| A    |    1 |           1 |
| A    |    2 |           1 |
| C    |    3 |           3 |
| C    |    4 |           3 |
| B    |    5 |           2 |
| E    |    6 |           5 |
| F    |    7 |           6 |
| A    |    8 |           1 |
| D    | NULL |        NULL |
| NULL |    9 |           7 |
+------+------+-------------+
10 rows in set (0.00 sec)


如果要重复的：
 select c.Name,v.id,v.candidateId from Candidate c left join Vote v on c.id=v.candidateId
 union all
select c.Name,v.id,v.candidateId from Candidate c right join Vote v on c.id=v.candidateId
+------+------+-------------+
| Name | id   | candidateId |
+------+------+-------------+
| A    |    1 |           1 |
| A    |    2 |           1 |
| C    |    3 |           3 |
| C    |    4 |           3 |
| B    |    5 |           2 |
| E    |    6 |           5 |
| F    |    7 |           6 |
| A    |    8 |           1 |
| D    | NULL |        NULL |
| A    |    1 |           1 |
| A    |    2 |           1 |
| C    |    3 |           3 |
| C    |    4 |           3 |
| B    |    5 |           2 |
| E    |    6 |           5 |
| F    |    7 |           6 |
| A    |    8 |           1 |
| NULL |    9 |           7 |
+------+------+-------------+
18 rows in set (0.00 sec)



union (或称为联合)的作用是将多个结果合并在一起显示出来。
union和union all的区别是: union会自动压缩多个结果集合中的重复结果，
而union all则将所有的结果全部显示出来，不管是不是重复。

5) , 连接
mysql> select c.Name,v.id,v.candidateId from Candidate c, Vote v 
    -> ;
+------+----+-------------+
| Name | id | candidateId |
+------+----+-------------+
| A    |  1 |           1 |
| B    |  1 |           1 |
| C    |  1 |           1 |
| D    |  1 |           1 |
| E    |  1 |           1 |
| F    |  1 |           1 |
| A    |  2 |           1 |
| B    |  2 |           1 |
| C    |  2 |           1 |
| D    |  2 |           1 |
| E    |  2 |           1 |
| F    |  2 |           1 |
| A    |  3 |           3 |
| B    |  3 |           3 |
| C    |  3 |           3 |
| D    |  3 |           3 |
| E    |  3 |           3 |
| F    |  3 |           3 |
| A    |  4 |           3 |
| B    |  4 |           3 |
| C    |  4 |           3 |
| D    |  4 |           3 |
| E    |  4 |           3 |
| F    |  4 |           3 |
| A    |  5 |           2 |
| B    |  5 |           2 |
| C    |  5 |           2 |
| D    |  5 |           2 |
| E    |  5 |           2 |
| F    |  5 |           2 |
| A    |  6 |           5 |
| B    |  6 |           5 |
| C    |  6 |           5 |
| D    |  6 |           5 |
| E    |  6 |           5 |
| F    |  6 |           5 |
| A    |  7 |           6 |
| B    |  7 |           6 |
| C    |  7 |           6 |
| D    |  7 |           6 |
| E    |  7 |           6 |
| F    |  7 |           6 |
| A    |  8 |           1 |
| B    |  8 |           1 |
| C    |  8 |           1 |
| D    |  8 |           1 |
| E    |  8 |           1 |
| F    |  8 |           1 |
| A    |  9 |           7 |
| B    |  9 |           7 |
| C    |  9 |           7 |
| D    |  9 |           7 |
| E    |  9 |           7 |
| F    |  9 |           7 |
+------+----+-------------+
54 rows in set (0.00 sec)

这样相当于笛卡尔积， 6*9=54