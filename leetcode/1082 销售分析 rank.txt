select t2.seller_id from 
(
select t.seller_id,RANK() over (order by t.MAXPRICE desc) my_rank
from
(
select product_id,seller_id,sum(price) as MAXPRICE from Sales
group by seller_id
) t
) t2 where t2.my_rank=1

rank的用法：
例1：
RANK() OVER (
    PARTITION BY <expression>[{,<expression>...}]
    ORDER BY <expression> [ASC|DESC], [{,<expression>...}]
) 
在这个语法中：

首先，PARTITION BY子句将结果集划分为分区。RANK()功能在分区内执行，并在跨越分区边界时重新初始化。
其次，ORDER BY子句按一个或多个列或表达式对分区内的行进行排序。
例子：
SELECT
    val,
    RANK() OVER (
        ORDER BY val
    ) my_rank
FROM
    rankDemo; 
这是输出：

+------+---------+
| val  | my_rank |
+------+---------+
|    1 |       1 |
|    2 |       2 |
|    2 |       2 |
|    3 |       4 |
|    4 |       5 |
|    4 |       5 |
|    5 |       7 |
+------+---------+
7 rows in set (0.02 sec)

例2：
让我们使用sales我们在窗口函数教程中创建的表进行演示。

以下是sales表：

+----------------+-------------+--------+
| sales_employee | fiscal_year | sale   |
+----------------+-------------+--------+
| Alice          |        2016 | 150.00 |
| Alice          |        2017 | 100.00 |
| Alice          |        2018 | 200.00 |
| Bob            |        2016 | 100.00 |
| Bob            |        2017 | 150.00 |
| Bob            |        2018 | 200.00 |
| John           |        2016 | 200.00 |
| John           |        2017 | 150.00 |
| John           |        2018 | 250.00 |
+----------------+-------------+--------+
9 rows in set (0.01 sec)
以下声明使用RANK()功能按销售额按每年的销售额排名：

SELECT
	sales_employee,
	fiscal_year,
	sale,
	RANK( ) OVER ( 
		PARTITION BY fiscal_year 
		ORDER BY sale DESC
	) sales_rank 
FROM
	sales; 
输出结果：

+----------------+-------------+--------+------------+
| sales_employee | fiscal_year | sale   | sales_rank |
+----------------+-------------+--------+------------+
| John           |        2016 | 200.00 |          1 |
| Alice          |        2016 | 150.00 |          2 |
| Bob            |        2016 | 100.00 |          3 |
| Bob            |        2017 | 150.00 |          1 |
| John           |        2017 | 150.00 |          1 |
| Alice          |        2017 | 100.00 |          3 |
| John           |        2018 | 250.00 |          1 |
| Alice          |        2018 | 200.00 |          2 |
| Bob            |        2018 | 200.00 |          2 |
+----------------+-------------+--------+------------+
9 rows in set (0.01 sec)

首先，PARTITION BY子句按财务年度将结果集分成多个分区。
然后，ORDER BY子句按销售额按降序对销售员工进行排序。